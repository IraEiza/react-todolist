{"ast":null,"code":"var _jsxFileName = \"/home/iratze/code/own-projects/react-todolist/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../assets/css/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    addTodo\n  } = _ref;\n  // Creamos las \"variables\" de los datos\n  const [newTodo, setNewTodo] = useState({\n    task: 'Clean my room',\n    priority: \"Medium\",\n    done: false\n  });\n  // \"Enlaza\" el valor del estado al input actualizándolo continuamente\n  const handleOnChange = event => {\n    setNewTodo(event.currentTarget.value);\n  };\n  // Lo que hacemos al darle al botón\n  const handleSubmit = event => {\n    event.preventDefault(); // Para que el formulario no mande datos por defecto (evita que la pág se refresque cuando le damos al botón)\n    if (newTodo.trim() !== '') {\n      addTodo(newTodo);\n      setNewTodo(''); // Limpia el input\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"to-do\",\n          children: [\"Task to do:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"to-do\",\n            placeholder: \"Insert task\",\n            value: newTodo,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"Priority\",\n          children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"Priority\",\n            name: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              defaultValue: true,\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: newTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"7WSSF7+/0Xv7OR3mT7aXHNmo4iU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","addTodo","newTodo","setNewTodo","task","priority","done","handleOnChange","event","currentTarget","value","handleSubmit","preventDefault","trim"],"sources":["/home/iratze/code/own-projects/react-todolist/src/components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../assets/css/Form.css'\n\nconst Form = ({addTodo}) => {\n  // Creamos las \"variables\" de los datos\n  const [newTodo, setNewTodo] = useState({task: 'Clean my room', priority: \"Medium\", done: false});\n  // \"Enlaza\" el valor del estado al input actualizándolo continuamente\n  const handleOnChange = (event) => {\n    setNewTodo(event.currentTarget.value)\n  }\n  // Lo que hacemos al darle al botón\n  const handleSubmit = (event) => {\n    event.preventDefault() // Para que el formulario no mande datos por defecto (evita que la pág se refresque cuando le damos al botón)\n    if(newTodo.trim() !== '') {\n      addTodo(newTodo);\n      setNewTodo(''); // Limpia el input\n    }\n  }\n\n  return (\n    <div>\n      <form id=\"form\" onSubmit = {handleSubmit}>\n        <section className=\"inputs\">\n        <label for=\"to-do\">Task to do: \n        <input type=\"text\" id=\"to-do\" placeholder=\"Insert task\" value={newTodo} onChange={handleOnChange}></input>\n        </label>\n        <label for=\"Priority\">Priority: \n        <select id=\"Priority\" name=\"select\">\n          <option value=\"Low\" defaultValue>Low</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"High\">High</option>\n        </select>\n        </label>\n        </section>\n        <br />\n        <div>{newTodo}</div>\n        \n        <button>Add task</button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAA;AAE/B,MAAMC,IAAI,GAAG,QAAe;EAAA;EAAA,IAAd;IAACC;EAAO,CAAC;EACrB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC;IAACK,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;EAChG;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCL,UAAU,CAACK,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EACvC,CAAC;EACD;EACA,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,EAAE,EAAC;IACvB,IAAGV,OAAO,CAACW,IAAI,EAAE,KAAK,EAAE,EAAE;MACxBZ,OAAO,CAACC,OAAO,CAAC;MAChBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;;EAED,oBACE;IAAA,uBACE;MAAM,EAAE,EAAC,MAAM;MAAC,QAAQ,EAAIQ,YAAa;MAAA,wBACvC;QAAS,SAAS,EAAC,QAAQ;QAAA,wBAC3B;UAAO,GAAG,EAAC,OAAO;UAAA,WAAC,aACnB;YAAO,IAAI,EAAC,MAAM;YAAC,EAAE,EAAC,OAAO;YAAC,WAAW,EAAC,aAAa;YAAC,KAAK,EAAET,OAAQ;YAAC,QAAQ,EAAEK;UAAe;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAClG,eACR;UAAO,GAAG,EAAC,UAAU;UAAA,WAAC,WACtB;YAAQ,EAAE,EAAC,UAAU;YAAC,IAAI,EAAC,QAAQ;YAAA,wBACjC;cAAQ,KAAK,EAAC,KAAK;cAAC,YAAY;cAAA,UAAC;YAAG;cAAA;cAAA;cAAA;YAAA,QAAS,eAC7C;cAAQ,KAAK,EAAC,QAAQ;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAS,eACtC;cAAQ,KAAK,EAAC,MAAM;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3B;QAAA;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACV;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,UAAML;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eAEpB;QAAA,UAAQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACpB;IAAA;IAAA;IAAA;EAAA,QAEH;AAEV,CAAC;AAAA,GAvCKF,IAAI;AAAA,KAAJA,IAAI;AAyCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}